// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_URL")
}

model User {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("tbl_user")
}

model Region {
  id        Int        @id @default(autoincrement())
  name      String     @unique
  provinces Province[]

  @@map("tbl_region")
}

// Model for Provinces
model Province {
  id       String @id @unique
  name     String @unique
  regionId Int
  cities   City[]
  region   Region @relation(fields: [regionId], references: [id])

  @@map("tbl_province")
}

// Model for Cities
model City {
  id           String        @id @unique
  name         String        @unique
  provinceId   String
  busTerminals BusTerminal[]
  routesStart  Route[]       @relation("StartCityRoutes")
  routesEnd    Route[]       @relation("EndCityRoutes")
  province     Province      @relation(fields: [provinceId], references: [id])
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt

  @@map("tbl_city")
}

// Model for Transportation Providers
model TransportationProvider {
  id        String   @id @unique
  name      String   @unique
  logo      String?
  details   String?
  routes    Route[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("tbl_transportation_provider")
}

// Model for Bus Terminals
model BusTerminal {
  id        Int      @id @default(autoincrement())
  citiId    String   @map("city_id")
  name      String
  address   String
  city      City     @relation(fields: [citiId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("tbl_bus_terminal")
}

// Model for Routes
model Route {
  id                       String                 @id @unique
  startCityId              String                 @map("start_city_id")
  endCityId                String                 @map("end_city_id")
  distance                 Int
  price                    Float
  estimatedTravelTime      Int                    @map("estimated_travel_time")
  transportationProviderId String                 @map("transportation_provider_id")
  startCity                City                   @relation("StartCityRoutes", fields: [startCityId], references: [id])
  endCity                  City                   @relation("EndCityRoutes", fields: [endCityId], references: [id])
  schedules                Schedule[]
  transportationProvider   TransportationProvider @relation(fields: [transportationProviderId], references: [id])
  createdAt                DateTime               @default(now())
  updatedAt                DateTime               @updatedAt

  @@map("tbl_route")
}

// Model for Schedules
model Schedule {
  id            Int      @id @default(autoincrement())
  routeId       String   @map("route_id")
  departureTime String   @map("departure_time")
  isAvailable   Boolean  @map("is_available")
  route         Route    @relation(fields: [routeId], references: [id])
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  @@map("tbl_schedule")
}
